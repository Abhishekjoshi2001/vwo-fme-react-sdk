{"version":3,"file":"vwo-fme-react-sdk.cjs.development.js","sources":["../lib/logger/Logger.ts","../lib/logger/enums/LogLevelEnum.ts","../lib/logger/transports/ConsoleTransport.ts","../lib/logger/LogMessageBuilder.ts","../lib/utils/DataTypeUtil.ts","../lib/logger/core/TransportManager.ts","../lib/logger/core/LogManager.ts","../lib/services/LoggerService.ts","../lib/VWOContext.ts","../lib/VWOProvider.tsx","../lib/useVWOClient.ts","../lib/useGetFlag.ts","../lib/useGetFlagVariable.ts","../lib/useTrackEvent.ts","../lib/useSetAttribute.ts"],"sourcesContent":["/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Abstract class representing a logger.\n * This class provides the structure for logging mechanisms and should be extended by specific logger implementations.\n */\nexport abstract class Logger {\n  /**\n   * Logs a message at the trace level.\n   * @param {string} message - The message to log.\n   */\n  abstract trace(message: string): void;\n\n  /**\n   * Logs a message at the debug level.\n   * @param {string} message - The message to log.\n   */\n  abstract debug(message: string): void;\n\n  /**\n   * Logs a message at the info level.\n   * @param {string} message - The message to log.\n   */\n  abstract info(message: string): void;\n\n  /**\n   * Logs a message at the warn level.\n   * @param {string} message - The message to log.\n   */\n  abstract warn(message: string): void;\n\n  /**\n   * Logs a message at the error level.\n   * @param {string} message - The message to log.\n   */\n  abstract error(message: string): void;\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum LogLevelEnum {\n  TRACE = 'trace',\n  DEBUG = 'debug',\n  INFO = 'info',\n  WARN = 'warn',\n  ERROR = 'error',\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogLevelEnum } from '../enums/LogLevelEnum';\nimport { Logger } from '../Logger';\n\n/**\n * ConsoleTransport class implements the Logger interface to provide logging functionality.\n * It outputs logs to the console based on the log level set in the configuration.\n */\nexport class ConsoleTransport implements Logger {\n  config: Record<string, any>; // Configuration object for the logger\n  level: string; // Current log level\n\n  /**\n   * Constructor initializes the ConsoleTransport with a configuration object.\n   * @param {Record<string, any>} config - Configuration settings for the logger, including 'level'.\n   */\n  constructor(config: Record<string, any> = {}) {\n    this.config = config; // Store the configuration\n    this.level = this.config.level; // Set the logging level from the configuration\n  }\n\n  /**\n   * Logs a trace message.\n   * @param {string} message - The message to log.\n   */\n  trace(message: string): void {\n    this.consoleLog(LogLevelEnum.TRACE, message);\n  }\n\n  /**\n   * Logs a debug message.\n   * @param {string} message - The message to log.\n   */\n  debug(message: string): void {\n    this.consoleLog(LogLevelEnum.DEBUG, message);\n  }\n\n  /**\n   * Logs an informational message.\n   * @param {string} message - The message to log.\n   */\n  info(message: string): void {\n    this.consoleLog(LogLevelEnum.INFO, message);\n  }\n\n  /**\n   * Logs a warning message.\n   * @param {string} message - The message to log.\n   */\n  warn(message: string): void {\n    this.consoleLog(LogLevelEnum.WARN, message);\n  }\n\n  /**\n   * Logs an error message.\n   * @param {string} message - The message to log.\n   */\n  error(message: string): void {\n    this.consoleLog(LogLevelEnum.ERROR, message);\n  }\n\n  /**\n   * Generic log function that logs messages to the console based on the log level.\n   * @param {string} level - The log level under which the message should be logged.\n   * @param {string} message - The message to log.\n   */\n  consoleLog(level: string, message: string): void {\n    console[level](message); // Use console's logging function dynamically based on the level\n  }\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { dynamic } from '../types/Common';\nimport { LogLevelEnum } from './enums/LogLevelEnum';\n\n/**\n * Interface defining the structure for a log message builder.\n */\ninterface ILogMessageBuilder {\n  loggerConfig: Record<string, dynamic>; // Configuration for the logger\n  transportConfig: Record<string, dynamic>; // Configuration for the transport mechanism\n  prefix: string; // Prefix to be added to each log message\n  dateTimeFormat: dynamic; // Function or format for date and time in log messages\n\n  formatMessage(level: string, message: string): string; // Method to format a log message\n  getFormattedLevel(level: string): string; // Method to format the log level\n  getFormattedDateTime(): string; // Method to get formatted date and time\n}\n\n/**\n * Implements the ILogMessageBuilder interface to provide a concrete log message builder.\n */\nexport class LogMessageBuilder implements ILogMessageBuilder {\n  loggerConfig: Record<string, any>;\n  transportConfig: Record<string, any>;\n  prefix: string;\n  dateTimeFormat: any;\n\n  /**\n   * Constructs a new LogMessageBuilder instance.\n   * @param {Record<string, any>} loggerConfig - Configuration for the logger.\n   * @param {Record<string, any>} transportConfig - Configuration for the transport mechanism.\n   */\n  constructor(loggerConfig: Record<string, any>, transportConfig: Record<string, any>) {\n    this.loggerConfig = loggerConfig;\n    this.transportConfig = transportConfig;\n\n    // Set the prefix, defaulting to an empty string if not provided.\n    this.prefix = this.transportConfig.prefix || this.loggerConfig.prefix || '';\n    // Set the date and time format, defaulting to the logger's format if the transport's format is not provided.\n    this.dateTimeFormat = this.transportConfig.dateTimeFormat || this.loggerConfig.dateTimeFormat;\n  }\n\n  /**\n   * Formats a log message combining level, prefix, date/time, and the actual message.\n   * @param {string} level - The log level.\n   * @param {string} message - The message to log.\n   * @returns {string} The formatted log message.\n   */\n  formatMessage(level: string, message: string): string {\n    return `[${this.getFormattedLevel(level)}]: ${this.getFormattedPrefix(this.prefix)} ${this.getFormattedDateTime()} ${message}`;\n  }\n\n  getFormattedPrefix(prefix: string): string {\n    return `${prefix}`;\n  }\n\n  /**\n   * Returns the formatted log level with appropriate coloring based on the log level.\n   * @param {string} level - The log level.\n   * @returns {string} The formatted log level.\n   */\n  getFormattedLevel(level: string): string {\n    const upperCaseLevel = level.toUpperCase();\n    let LogLevelColorInfoEnum;\n\n    LogLevelColorInfoEnum = {\n      [LogLevelEnum.TRACE]: upperCaseLevel,\n      [LogLevelEnum.DEBUG]: upperCaseLevel,\n      [LogLevelEnum.INFO]: upperCaseLevel,\n      [LogLevelEnum.WARN]: upperCaseLevel,\n      [LogLevelEnum.ERROR]: upperCaseLevel,\n    };\n\n    return LogLevelColorInfoEnum[level];\n  }\n\n  /**\n   * Retrieves the current date and time formatted according to the specified format.\n   * @returns {string} The formatted date and time.\n   */\n  getFormattedDateTime(): string {\n    return this.dateTimeFormat();\n  }\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { dynamic } from '../types/Common';\n\ntype FunctionType = (val: dynamic) => void;\n\n/**\n * Checks if a value is a function.\n * @param val The value to check.\n * @returns True if the value is a function, false otherwise.\n */\nexport function isFunction(val: dynamic): val is FunctionType {\n  return Object.prototype.toString.call(val) === '[object Function]';\n}\n\n/**\n * Checks if a value is an object (excluding arrays, functions, regex, promises, and dates).\n * @param val The value to check.\n * @returns True if the value is a valid object, false otherwise.\n */\nexport function isObject<T>(\n  val: T,\n): val is Record<any, dynamic> & Exclude<T, Array<dynamic> | FunctionType | RegExp | Promise<dynamic> | Date> {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Checks if a value is a string.\n * @param val The value to check.\n * @returns True if the value is a string, false otherwise.\n */\nexport function isString(val: dynamic): val is string {\n  return typeof val === 'string' || Object.prototype.toString.call(val) === '[object String]';\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { dynamic } from '../../types/Common';\nimport { LogLevelEnum } from '../enums/LogLevelEnum';\nimport { LogMessageBuilder } from '../LogMessageBuilder';\nimport { Logger } from '../Logger';\nimport { isFunction } from '../../utils/DataTypeUtil';\n\nenum LogLevelNumberEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n}\n\ninterface IlogTransport extends Logger {\n  transports: Array<Record<string, dynamic>>;\n  config: Record<string, dynamic>;\n\n  // Determines if a message should be logged based on the transport and configuration levels\n  shouldLog(transportLevel: string, configLevel: string): boolean;\n  // Logs a message at a specified level\n  log(level: string, message: string): void;\n}\n\n/**\n * Manages logging transports and delegates logging messages to them based on configuration.\n * Implements the IlogTransport interface.\n */\nexport class LogTransportManager implements IlogTransport {\n  transports: Array<Record<string, any>>;\n  config: Record<string, any>;\n\n  /**\n   * Initializes the manager with a configuration object.\n   * @param {Record<string, any>} config - Configuration settings for the log manager.\n   */\n  constructor(config: Record<string, any>) {\n    this.transports = [];\n    this.config = config;\n  }\n\n  /**\n   * Adds a new transport to the manager.\n   * @param {Record<string, any>} transport - The transport object to be added.\n   */\n  addTransport(transport: Record<string, any>): void {\n    this.transports.push(transport);\n  }\n\n  /**\n   * Determines if the log should be processed based on the transport and configuration levels.\n   * @param {string} transportLevel - The log level set for the transport.\n   * @param {string} configLevel - The log level set in the configuration.\n   * @returns {boolean} - Returns true if the log level is appropriate for logging, false otherwise.\n   */\n  shouldLog(transportLevel: string, configLevel: string): boolean {\n    // Default to the most specific level available\n    // transportLevel = transportLevel || configLevel || this.config.level;\n\n    const targetLevel = LogLevelNumberEnum[transportLevel.toUpperCase()];\n    const desiredLevel = LogLevelNumberEnum[(configLevel || this.config.level).toUpperCase()];\n\n    return targetLevel >= desiredLevel;\n  }\n\n  /**\n   * Logs a message at TRACE level.\n   * @param {string} message - The message to log.\n   */\n  trace(message: string): void {\n    this.log(LogLevelEnum.TRACE, message);\n  }\n\n  /**\n   * Logs a message at DEBUG level.\n   * @param {string} message - The message to log.\n   */\n  debug(message: string): void {\n    this.log(LogLevelEnum.DEBUG, message);\n  }\n\n  /**\n   * Logs a message at INFO level.\n   * @param {string} message - The message to log.\n   */\n  info(message: string): void {\n    this.log(LogLevelEnum.INFO, message);\n  }\n\n  /**\n   * Logs a message at WARN level.\n   * @param {string} message - The message to log.\n   */\n  warn(message: string): void {\n    this.log(LogLevelEnum.WARN, message);\n  }\n\n  /**\n   * Logs a message at ERROR level.\n   * @param {string} message - The message to log.\n   */\n  error(message: string): void {\n    this.log(LogLevelEnum.ERROR, message);\n  }\n\n  /**\n   * Delegates the logging of messages to the appropriate transports.\n   * @param {string} level - The level at which to log the message.\n   * @param {string} message - The message to log.\n   */\n  log(level: string, message: string): void {\n    for (let i = 0; i < this.transports.length; i++) {\n      const logMessageBuilder = new LogMessageBuilder(this.config, this.transports[i]);\n      const formattedMessage = logMessageBuilder.formatMessage(level, message);\n      if (this.shouldLog(level, this.transports[i].level)) {\n        if (this.transports[i].log && isFunction(this.transports[i].log)) {\n          // Use custom log handler if available\n          this.transports[i].log(level, message);\n        } else {\n          // Otherwise, use the default log method\n          this.transports[i][level](formattedMessage);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { dynamic } from '../../types/Common';\n\nimport { Logger } from '../Logger';\nimport { ConsoleTransport } from '../transports/ConsoleTransport';\nimport { LogTransportManager } from './TransportManager';\nimport { LogLevelEnum } from '../enums/LogLevelEnum';\n\n/**\n * Interface defining the structure and methods for LogManager.\n */\nexport interface ILogManager {\n  transportManager?: LogTransportManager;\n  config?: Record<string, dynamic>;\n  name?: string;\n  requestId?: string;\n  level: string;\n  prefix?: string;\n  dateTimeFormat?: () => string;\n\n  transport?: Record<string, dynamic>;\n  transports?: Array<Record<string, dynamic>>;\n\n  addTransport?(transportObject: Record<string, dynamic>): void;\n  addTransports?(transportsList: Array<Record<string, dynamic>>): void;\n}\n\n/**\n * LogManager class provides logging functionality with support for multiple transports.\n * It is designed as a singleton to ensure a single instance throughout the application.\n */\nexport class LogManager extends Logger implements ILogManager {\n  private static instance: LogManager; // Singleton instance of LogManager\n  transportManager: LogTransportManager;\n  config: Record<string, any>;\n  name = 'VWO Logger'; // Default logger name\n  requestId = new Date().getTime().toString(); // current timestamp in milliseconds\n  level = LogLevelEnum.ERROR; // Default logging level\n  prefix = 'VWO-SDK'; // Default prefix for log messages\n  public dateTimeFormat(): string {\n    return new Date().toISOString(); // Default date-time format for log messages\n  }\n  transport: Record<string, any>;\n  transports: Array<Record<string, any>>;\n\n  /**\n   * Constructor for LogManager.\n   * @param {Record<string, any>} config - Configuration object for LogManager.\n   */\n  constructor(config?: Record<string, any>) {\n    super();\n\n    this.config = config;\n\n    if (config.isAlwaysNewInstance || !LogManager.instance) {\n      LogManager.instance = this;\n\n      // Initialize configuration with defaults or provided values\n      this.config.name = config.name || this.name;\n      this.config.requestId = config.requestId || this.requestId;\n      this.config.level = config.level || this.level;\n      this.config.prefix = config.prefix || this.prefix;\n      this.config.dateTimeFormat = config.dateTimeFormat || this.dateTimeFormat;\n\n      this.transportManager = new LogTransportManager(this.config);\n\n      this.handleTransports();\n    }\n\n    return LogManager.instance;\n  }\n\n  /**\n   * Provides access to the singleton instance of LogManager.\n   * @returns {LogManager} The singleton instance.\n   */\n  static get Instance(): LogManager {\n    return LogManager.instance;\n  }\n\n  /**\n   * Handles the initialization and setup of transports based on configuration.\n   */\n  handleTransports(): void {\n    this.addTransport(\n      new ConsoleTransport({\n        level: this.config.level,\n      }),\n    );\n  }\n\n  /**\n   * Adds a single transport to the LogManager.\n   * @param {Record<any, any>} transport - The transport object to add.\n   */\n  addTransport(transport: Record<any, any>): void {\n    this.transportManager.addTransport(transport);\n  }\n\n  /**\n   * Adds multiple transports to the LogManager.\n   * @param {Array<Record<any, any>>} transports - The list of transport objects to add.\n   */\n  addTransports(transports: Record<any, any>): void {\n    for (let i = 0; i < transports.length; i++) {\n      this.addTransport(transports[i]);\n    }\n  }\n\n  /**\n   * Logs a trace message.\n   * @param {string} message - The message to log at trace level.\n   */\n  trace(message: string): void {\n    this.transportManager.log(LogLevelEnum.TRACE, message);\n  }\n\n  /**\n   * Logs a debug message.\n   * @param {string} message - The message to log at debug level.\n   */\n  debug(message: string): void {\n    this.transportManager.log(LogLevelEnum.DEBUG, message);\n  }\n\n  /**\n   * Logs an informational message.\n   * @param {string} message - The message to log at info level.\n   */\n  info(message: string): void {\n    this.transportManager.log(LogLevelEnum.INFO, message);\n  }\n\n  /**\n   * Logs a warning message.\n   * @param {string} message - The message to log at warn level.\n   */\n  warn(message: string): void {\n    this.transportManager.log(LogLevelEnum.WARN, message);\n  }\n\n  /**\n   * Logs an error message.\n   * @param {string} message - The message to log at error level.\n   */\n  error(message: string): void {\n    this.transportManager.log(LogLevelEnum.ERROR, message);\n  }\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * logger.ts - Global Logger Singleton\n */\nimport { LogManager } from '../logger/core/LogManager';\n\nlet logger: LogManager | null = null;\n\n/**\n * Initializes the global logger instance.\n * This function should be called inside `VWOProvider` before logging is used anywhere in the application.\n *\n * @param {object} config - The logger configuration object.\n * @param {object} config.logger - Optional logging configuration (e.g., log level, transports).\n * @returns {void} No return value; initializes the logger instance.\n */\nexport function initLogger(config: any) {\n  if (!logger) {\n    logger = new LogManager(config.logger || {});\n  }\n}\n\n/**\n * Retrieves the global logger instance.\n * Ensures that `initLogger` has been called before attempting to use logging.\n *\n * @returns {LogManager} The global logger instance.\n */\nexport function getLogger(): LogManager {\n  if (!logger) {\n    logger = new LogManager({ level: 'error' });\n  }\n  return logger;\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createContext, useContext } from 'react';\nimport { getLogger } from './services/LoggerService';\n\ninterface VWOContextType {\n  vwoClient: any;\n  userContext?: any;\n  setUserContext?: (context: any) => void;\n}\n\nexport const VWOContext = createContext<VWOContextType>({\n  vwoClient: null,\n  userContext: null,\n  setUserContext: undefined, // Default is undefined\n});\n\nexport const useVWOContext = () => {\n  const logger = getLogger();\n  try {\n    // Fetch the context\n    const context = useContext(VWOContext);\n\n    // If the context is not found, throw an error\n    if (!context) {\n      logger.error('useVWOContext must be used within a VWOProvider');\n      return null;\n    }\n    return context;\n  } catch (error) {\n    logger.error(`Error in useVWOContext hook: ${error}`);\n    return null;\n  }\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState, useRef, ReactNode } from 'react';\nimport { init } from 'vwo-fme-node-sdk';\nimport { VWOContext } from './VWOContext';\nimport { initLogger, getLogger } from './services/LoggerService';\n\ninterface VWOProviderProps {\n  client?: any;\n  config?: any;\n  userContext?: any;\n  children: ReactNode;\n}\n\n/**\n * VWOProvider component to provide VWO client and configuration context to child components.\n *\n * @param {Object} props - The properties for the VWOProvider component.\n * @param {Object} props.client - The VWO client instance.\n * @param {Object} props.config - Configuration settings for the VWO client.\n * @param {Object} props.userContext - Initial user context for the VWO client.\n * @param {React.ReactNode} props.children - Child components that will have access to the VWO context.\n * @returns {JSX.Element} The provider component wrapping its children with VWO context.\n */\nexport const VWOProvider: React.FC<VWOProviderProps> = ({ client, config, userContext, children }) => {\n  const [vwoClient, setVwoClient] = useState<any>(client || null);\n  const [context, setContext] = useState<any>(userContext || null);\n  const vwoClientRef = useRef<any>(vwoClient); // Store the client reference without triggering re-renders\n  const isMounted = useRef(true); // Prevent updates after unmount\n\n  const logger = getLogger();\n\n  // Initialize logger globally before using it\n  useEffect(() => {\n    if (config?.logger) {\n      initLogger(config);\n    }\n  }, [config]);\n\n  // Initialize the VWO SDK instance only once when the component mounts or if config is updated\n  useEffect(() => {\n    // If neither vwoClient nor config is provided, log the error\n    if (!vwoClient && !config) {\n      logger.error(\"VWOProvider Error: Either `client` or `config` must be provided.\");\n      return;\n    }\n\n    const initializeVWO = async () => {\n      try {\n        if (!vwoClient && config) {\n          // Initialize the VWO SDK instance if vwoClient is not already initialized\n          const instance = await init(config);\n          if (isMounted.current) {\n            setVwoClient(instance);\n            vwoClientRef.current = instance;\n          }\n        }\n      } catch (error) {\n        logger.error(`VWO-SDK Initialization failed: ${error}`);\n      }\n    };\n\n    // Only initialize once\n    if (!vwoClient && config) {\n      initializeVWO();\n    }\n\n    return () => {\n      isMounted.current = false;\n      if (vwoClientRef.current && vwoClientRef.current.destroy) {\n        vwoClientRef.current.destroy();\n      }\n    };\n  }, [config, vwoClient]); // Re-run only when config or vwoClient changes\n\n  return (\n    <VWOContext.Provider value={{ vwoClient, userContext: context, setUserContext: setContext }}>\n      {children}\n    </VWOContext.Provider>\n  );\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getLogger } from './services/LoggerService';\nimport { useVWOContext } from './VWOContext';\n\n/**\n * Returns the VWO SDK client instance\n * @returns VWO SDK client instance\n */\nexport const useVWOClient = () => {\n  const logger = getLogger();\n  try {\n    const context = useVWOContext();\n\n    // If the VWO SDK client is not found, throw an error\n    if (!context || !context.vwoClient) {\n      logger.error('useVWOClient must be used within a VWOProvider !!');\n      return null;\n    }\n\n    // Return the VWO SDK client\n    return context.vwoClient;\n  } catch (error) {\n    logger.error(`Error in useVWOClient hook: ${error}`);\n    return null;\n  }\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useVWOContext } from './VWOContext';\nimport { getLogger } from './services/LoggerService';\nimport { isObject } from './utils/DataTypeUtil';\n\n/**\n * Custom hook to retrieve a feature flag using VWO client.\n *\n * @param {string} featureKey - The key of the feature flag to retrieve.\n * @param {Object} [context] - Optional user context to use for fetching the flag.\n * @returns {Object} An object containing the flag and a readiness status.\n */\nexport const useGetFlag = (featureKey: string, context?: any) => {\n  // Define the error return schema for the hook\n  const errorReturnSchema = {\n    flag: {\n      isEnabled: (): boolean => false,\n      getVariables: (): Array<Record<string, any>> => [],\n      getVariable: (_key: string, defaultValue: any): any => defaultValue,\n    },\n    isReady: (): boolean => false,\n  };\n\n  // Destructure vwoClient, setUserContext, and userContext from VWOContext\n  const { vwoClient, setUserContext, userContext } = useVWOContext();\n\n  // State to store the flag and loading status\n  const [flag, setFlag] = useState<any | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  // Get the logger instance\n  const logger = getLogger();\n\n  // Memoize the user context to prevent unnecessary re-renders\n  const stableUserContext = useMemo(() => {\n    return context || userContext || {};\n  }, [JSON.stringify(userContext)]); // Only recreate if userContext actually changes\n\n  // Define the getFlag function to fetch the feature flag\n  const getFlag = useCallback(async () => {\n    // Check if featureKey is provided\n    if (!featureKey) {\n      logger.error('Feature key is required for useGetFlag hook');\n      return errorReturnSchema;\n    }\n\n    // Check if the user context is a valid object\n    if (!isObject(stableUserContext)) {\n      logger.error('Invalid user context in useGetFlag hook');\n      return errorReturnSchema;\n    }\n\n    // Try to fetch the feature flag and handle errors\n    try {\n      setIsLoading(true);\n      const result = await vwoClient.getFlag(featureKey, stableUserContext);\n      setFlag(result);\n\n      // Set the user context in the context to ensure it's available for other hooks\n      setUserContext(stableUserContext);\n    } catch (error) {\n      logger.error(`Error fetching feature flag \"${featureKey}\": ${error}`);\n      setFlag(null);\n    } finally {\n      setIsLoading(false);\n    }\n  }, [featureKey, stableUserContext, vwoClient]);\n\n  // Ensure vwoClient is ready\n  if (!vwoClient) {\n    logger.error('VWO Client is missing in useGetFlag hook. Ensure VWOProvider is correctly initialized.');\n    return errorReturnSchema;\n  }\n\n  // Run effect when dependencies change to fetch the flag\n  useEffect(() => {\n    if (featureKey && vwoClient && stableUserContext) {\n      getFlag();\n    }\n  }, [featureKey, stableUserContext, vwoClient]);\n\n  // Return the flag and readiness status\n  return {\n    flag,\n    isReady: (): boolean => !isLoading && !!flag,\n  };\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isObject } from './utils/DataTypeUtil';\nimport { getLogger } from './services/LoggerService';\n\n/**\n * Hook to get all variables from a flag\n * @param flag - The flag to get the variables from\n * @returns The variables from the flag\n */\nexport const useGetFlagVariables = (flag: any) => {\n  const logger = getLogger();\n  try {\n    if (!flag || !isObject(flag)) {\n      logger.error('Flag is required for useGetFlagVariables hook and should be an object');\n      return [];\n    }\n\n    return flag.getVariables();\n  } catch (error) {\n    logger.error(`Error getting flag variables: ${error}`);\n    return [];\n  }\n};\n\n/**\n * Hook to get a flag variable\n * @param flag - The flag to get the variable from\n * @param variableKey - The key of the variable to get\n * @param defaultValue - The default value to return if the variable is not found\n * @returns The value of the variable\n */\nexport const useGetFlagVariable = (flag: any, variableKey: string, defaultValue: any) => {\n  const logger = getLogger();\n  try {\n    if (!flag || !isObject(flag)) {\n      logger.error('Flag is required for useGetFlagVariable hook and should be an object');\n      return [];\n    }\n\n    if (!flag || !variableKey) {\n      logger.error('Flag and variable key are required for useGetFlagVariable hook');\n      return defaultValue;\n    }\n\n    return flag.getVariable(variableKey, defaultValue);\n  } catch (error) {\n    logger.error(`Error getting flag variable: ${error}`);\n    return defaultValue;\n  }\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getLogger } from './services/LoggerService';\nimport { useVWOContext } from './VWOContext';\nimport { isObject, isString } from './utils/DataTypeUtil';\n\n/**\n * Hook to track an event\n * @param eventName - The name of the event to track\n * @param eventProperties - The properties of the event to track (optional)\n */\nexport const useTrackEvent = (eventName: string, eventProperties: Record<string, string> = {}) => {\n  const logger = getLogger();\n  try {\n    if (!eventName && !isString(eventName)) {\n      logger.error('Event name is required for useTrackEvent hook and it should be a string');\n      return;\n    }\n\n    // Fetch the vwoClient and userContext from the context\n    const { vwoClient, userContext } = useVWOContext();\n\n    if (!vwoClient) {\n      logger.error('VWO Client is missing in useTrackEvent hook. Ensure VWOProvider is correctly initialized.');\n      return {};\n    }\n\n    if (!userContext || !isObject(userContext)) {\n      logger.error('Invalid user context in useTrackEvent hook. Ensure a valid userContext is provided.');\n      return {};\n    }\n\n    // Track the event\n    vwoClient.trackEvent(eventName, userContext, eventProperties);\n  } catch (error) {\n    logger.error(`Error tracking event: ${error}`);\n  }\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useVWOContext } from './VWOContext';\nimport { isObject } from './utils/DataTypeUtil';\nimport { getLogger } from './services/LoggerService';\n\n/**\n * Hook to set attributes for the user\n * @param attributeMap - The map of attributes to set\n */\nexport const useSetAttribute = (attributeMap: Record<string, string>) => {\n  const logger = getLogger();\n  try {\n    if (!attributeMap || !isObject(attributeMap) || Object.keys(attributeMap).length === 0) {\n      logger.error(\n        'attributeMap(object having key-value pairs of user attributes) is required for useSetAttribute hook',\n      );\n      return;\n    }\n\n    // Fetch the vwoClient and userContext from the context\n    const { vwoClient, userContext } = useVWOContext();\n\n    if (!vwoClient) {\n      logger.error('VWO Client is missing in useSetAttribute hook. Ensure VWOProvider is correctly initialized.');\n      return {};\n    }\n\n    if (!userContext || !isObject(userContext)) {\n      logger.error('Invalid user context in useSetAttribute hook. Ensure a valid userContext is provided.');\n      return {};\n    }\n\n    // Set the attributes\n    vwoClient.setAttribute(attributeMap, userContext);\n  } catch (error) {\n    logger.error(`Error setting attributes: ${error}`);\n  }\n};\n"],"names":["Logger","LogLevelEnum","ConsoleTransport","constructor","config","level","trace","message","consoleLog","TRACE","debug","DEBUG","info","INFO","warn","WARN","error","ERROR","console","LogMessageBuilder","loggerConfig","transportConfig","prefix","dateTimeFormat","formatMessage","getFormattedLevel","getFormattedPrefix","getFormattedDateTime","upperCaseLevel","toUpperCase","LogLevelColorInfoEnum","isFunction","val","Object","prototype","toString","call","isObject","isString","LogLevelNumberEnum","LogTransportManager","transports","addTransport","transport","push","shouldLog","transportLevel","configLevel","targetLevel","desiredLevel","log","i","length","logMessageBuilder","formattedMessage","LogManager","Date","getTime","isAlwaysNewInstance","instance","name","requestId","transportManager","handleTransports","toISOString","Instance","addTransports","logger","initLogger","getLogger","VWOContext","createContext","vwoClient","userContext","setUserContext","undefined","useVWOContext","context","useContext","VWOProvider","client","children","setVwoClient","useState","setContext","vwoClientRef","useRef","isMounted","useEffect","initializeVWO","init","current","destroy","React","Provider","value","useVWOClient","useGetFlag","featureKey","errorReturnSchema","flag","isEnabled","getVariables","getVariable","_key","defaultValue","isReady","setFlag","isLoading","setIsLoading","stableUserContext","useMemo","JSON","stringify","getFlag","useCallback","result","useGetFlagVariables","useGetFlagVariable","variableKey","useTrackEvent","eventName","eventProperties","trackEvent","useSetAttribute","attributeMap","keys","setAttribute"],"mappings":"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"}