{"version":3,"file":"vwo-fme-react-sdk.umd.development.js","sources":["../lib/logger/Logger.ts","../lib/logger/enums/LogLevelEnum.ts","../lib/logger/transports/ConsoleTransport.ts","../lib/logger/LogMessageBuilder.ts","../lib/utils/DataTypeUtil.ts","../lib/logger/core/TransportManager.ts","../lib/logger/core/LogManager.ts","../lib/services/LoggerService.ts","../lib/enum/LogMessageEnum.ts","../lib/utils/LogMessageUtil.ts","../lib/enum/HookEnum.ts","../lib/VWOContext.ts","../lib/VWOProvider.tsx","../lib/useVWOClient.ts","../lib/useGetFlag.ts","../lib/useGetFlagVariable.ts","../lib/useTrackEvent.ts","../lib/useSetAttribute.ts"],"sourcesContent":["/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Abstract class representing a logger.\n * This class provides the structure for logging mechanisms and should be extended by specific logger implementations.\n */\nexport abstract class Logger {\n  /**\n   * Logs a message at the trace level.\n   * @param {string} message - The message to log.\n   */\n  abstract trace(message: string): void;\n\n  /**\n   * Logs a message at the debug level.\n   * @param {string} message - The message to log.\n   */\n  abstract debug(message: string): void;\n\n  /**\n   * Logs a message at the info level.\n   * @param {string} message - The message to log.\n   */\n  abstract info(message: string): void;\n\n  /**\n   * Logs a message at the warn level.\n   * @param {string} message - The message to log.\n   */\n  abstract warn(message: string): void;\n\n  /**\n   * Logs a message at the error level.\n   * @param {string} message - The message to log.\n   */\n  abstract error(message: string): void;\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum LogLevelEnum {\n  TRACE = 'trace',\n  DEBUG = 'debug',\n  INFO = 'info',\n  WARN = 'warn',\n  ERROR = 'error',\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { LogLevelEnum } from '../enums/LogLevelEnum';\nimport { Logger } from '../Logger';\n\n/**\n * ConsoleTransport class implements the Logger interface to provide logging functionality.\n * It outputs logs to the console based on the log level set in the configuration.\n */\nexport class ConsoleTransport implements Logger {\n  config: Record<string, any>; // Configuration object for the logger\n  level: string; // Current log level\n\n  /**\n   * Constructor initializes the ConsoleTransport with a configuration object.\n   * @param {Record<string, any>} config - Configuration settings for the logger, including 'level'.\n   */\n  constructor(config: Record<string, any> = {}) {\n    this.config = config; // Store the configuration\n    this.level = this.config.level; // Set the logging level from the configuration\n  }\n\n  /**\n   * Logs a trace message.\n   * @param {string} message - The message to log.\n   */\n  trace(message: string): void {\n    this.consoleLog(LogLevelEnum.TRACE, message);\n  }\n\n  /**\n   * Logs a debug message.\n   * @param {string} message - The message to log.\n   */\n  debug(message: string): void {\n    this.consoleLog(LogLevelEnum.DEBUG, message);\n  }\n\n  /**\n   * Logs an informational message.\n   * @param {string} message - The message to log.\n   */\n  info(message: string): void {\n    this.consoleLog(LogLevelEnum.INFO, message);\n  }\n\n  /**\n   * Logs a warning message.\n   * @param {string} message - The message to log.\n   */\n  warn(message: string): void {\n    this.consoleLog(LogLevelEnum.WARN, message);\n  }\n\n  /**\n   * Logs an error message.\n   * @param {string} message - The message to log.\n   */\n  error(message: string): void {\n    this.consoleLog(LogLevelEnum.ERROR, message);\n  }\n\n  /**\n   * Generic log function that logs messages to the console based on the log level.\n   * @param {string} level - The log level under which the message should be logged.\n   * @param {string} message - The message to log.\n   */\n  consoleLog(level: string, message: string): void {\n    (console[level as keyof Console] as Function)(message);\n  }\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { dynamic } from '../types/Common';\nimport { LogLevelEnum } from './enums/LogLevelEnum';\n\n/**\n * Interface defining the structure for a log message builder.\n */\ninterface ILogMessageBuilder {\n  loggerConfig: Record<string, dynamic>; // Configuration for the logger\n  transportConfig: Record<string, dynamic>; // Configuration for the transport mechanism\n  prefix: string; // Prefix to be added to each log message\n  dateTimeFormat: dynamic; // Function or format for date and time in log messages\n\n  formatMessage(level: string, message: string): string; // Method to format a log message\n  getFormattedLevel(level: string): string; // Method to format the log level\n  getFormattedDateTime(): string; // Method to get formatted date and time\n}\n\n/**\n * Implements the ILogMessageBuilder interface to provide a concrete log message builder.\n */\nexport class LogMessageBuilder implements ILogMessageBuilder {\n  loggerConfig: Record<string, any>;\n  transportConfig: Record<string, any>;\n  prefix: string;\n  dateTimeFormat: any;\n\n  /**\n   * Constructs a new LogMessageBuilder instance.\n   * @param {Record<string, any>} loggerConfig - Configuration for the logger.\n   * @param {Record<string, any>} transportConfig - Configuration for the transport mechanism.\n   */\n  constructor(loggerConfig: Record<string, any>, transportConfig: Record<string, any>) {\n    this.loggerConfig = loggerConfig;\n    this.transportConfig = transportConfig;\n\n    // Set the prefix, defaulting to an empty string if not provided.\n    this.prefix = this.transportConfig.prefix || this.loggerConfig.prefix || '';\n    // Set the date and time format, defaulting to the logger's format if the transport's format is not provided.\n    this.dateTimeFormat = this.transportConfig.dateTimeFormat || this.loggerConfig.dateTimeFormat;\n  }\n\n  /**\n   * Formats a log message combining level, prefix, date/time, and the actual message.\n   * @param {string} level - The log level.\n   * @param {string} message - The message to log.\n   * @returns {string} The formatted log message.\n   */\n  formatMessage(level: string, message: string): string {\n    return `[${this.getFormattedLevel(level)}]: ${this.getFormattedPrefix(this.prefix)} ${this.getFormattedDateTime()} ${message}`;\n  }\n\n  getFormattedPrefix(prefix: string): string {\n    return `${prefix}`;\n  }\n\n  /**\n   * Returns the formatted log level with appropriate coloring based on the log level.\n   * @param {string} level - The log level.\n   * @returns {string} The formatted log level.\n   */\n  getFormattedLevel(level: string): string {\n    const upperCaseLevel = level.toUpperCase();\n    let LogLevelColorInfoEnum;\n\n    LogLevelColorInfoEnum = {\n      [LogLevelEnum.TRACE]: upperCaseLevel,\n      [LogLevelEnum.DEBUG]: upperCaseLevel,\n      [LogLevelEnum.INFO]: upperCaseLevel,\n      [LogLevelEnum.WARN]: upperCaseLevel,\n      [LogLevelEnum.ERROR]: upperCaseLevel,\n    };\n\n    return LogLevelColorInfoEnum[level as keyof typeof LogLevelColorInfoEnum];\n  }\n\n  /**\n   * Retrieves the current date and time formatted according to the specified format.\n   * @returns {string} The formatted date and time.\n   */\n  getFormattedDateTime(): string {\n    return this.dateTimeFormat();\n  }\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { dynamic } from '../types/Common';\n\ntype FunctionType = (val: dynamic) => void;\n\n/**\n * Checks if a value is a function.\n * @param val The value to check.\n * @returns True if the value is a function, false otherwise.\n */\nexport function isFunction(val: dynamic): val is FunctionType {\n  return Object.prototype.toString.call(val) === '[object Function]';\n}\n\n/**\n * Checks if a value is an object (excluding arrays, functions, regex, promises, and dates).\n * @param val The value to check.\n * @returns True if the value is a valid object, false otherwise.\n */\nexport function isObject<T>(\n  val: T,\n): val is Record<any, dynamic> & Exclude<T, Array<dynamic> | FunctionType | RegExp | Promise<dynamic> | Date> {\n  return Object.prototype.toString.call(val) === '[object Object]';\n}\n\n/**\n * Checks if a value is a string.\n * @param val The value to check.\n * @returns True if the value is a string, false otherwise.\n */\nexport function isString(val: dynamic): val is string {\n  return typeof val === 'string' || Object.prototype.toString.call(val) === '[object String]';\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { dynamic } from '../../types/Common';\nimport { LogLevelEnum } from '../enums/LogLevelEnum';\nimport { LogMessageBuilder } from '../LogMessageBuilder';\nimport { Logger } from '../Logger';\nimport { isFunction } from '../../utils/DataTypeUtil';\n\nenum LogLevelNumberEnum {\n  TRACE = 0,\n  DEBUG = 1,\n  INFO = 2,\n  WARN = 3,\n  ERROR = 4,\n}\n\ninterface IlogTransport extends Logger {\n  transports: Array<Record<string, dynamic>>;\n  config: Record<string, dynamic>;\n\n  // Determines if a message should be logged based on the transport and configuration levels\n  shouldLog(transportLevel: string, configLevel: string): boolean;\n  // Logs a message at a specified level\n  log(level: string, message: string): void;\n}\n\n/**\n * Manages logging transports and delegates logging messages to them based on configuration.\n * Implements the IlogTransport interface.\n */\nexport class LogTransportManager implements IlogTransport {\n  transports: Array<Record<string, any>>;\n  config: Record<string, any>;\n\n  /**\n   * Initializes the manager with a configuration object.\n   * @param {Record<string, any>} config - Configuration settings for the log manager.\n   */\n  constructor(config: Record<string, any>) {\n    this.transports = [];\n    this.config = config;\n  }\n\n  /**\n   * Adds a new transport to the manager.\n   * @param {Record<string, any>} transport - The transport object to be added.\n   */\n  addTransport(transport: Record<string, any>): void {\n    this.transports.push(transport);\n  }\n\n  /**\n   * Determines if the log should be processed based on the transport and configuration levels.\n   * @param {string} transportLevel - The log level set for the transport.\n   * @param {string} configLevel - The log level set in the configuration.\n   * @returns {boolean} - Returns true if the log level is appropriate for logging, false otherwise.\n   */\n  shouldLog(transportLevel: string, configLevel: string): boolean {\n    // Default to the most specific level available\n    // transportLevel = transportLevel || configLevel || this.config.level;\n\n    const targetLevel = LogLevelNumberEnum[transportLevel.toUpperCase() as keyof typeof LogLevelNumberEnum];\n    const desiredLevel =\n      LogLevelNumberEnum[(configLevel || this.config.level).toUpperCase() as keyof typeof LogLevelNumberEnum];\n\n    return targetLevel >= desiredLevel;\n  }\n\n  /**\n   * Logs a message at TRACE level.\n   * @param {string} message - The message to log.\n   */\n  trace(message: string): void {\n    this.log(LogLevelEnum.TRACE, message);\n  }\n\n  /**\n   * Logs a message at DEBUG level.\n   * @param {string} message - The message to log.\n   */\n  debug(message: string): void {\n    this.log(LogLevelEnum.DEBUG, message);\n  }\n\n  /**\n   * Logs a message at INFO level.\n   * @param {string} message - The message to log.\n   */\n  info(message: string): void {\n    this.log(LogLevelEnum.INFO, message);\n  }\n\n  /**\n   * Logs a message at WARN level.\n   * @param {string} message - The message to log.\n   */\n  warn(message: string): void {\n    this.log(LogLevelEnum.WARN, message);\n  }\n\n  /**\n   * Logs a message at ERROR level.\n   * @param {string} message - The message to log.\n   */\n  error(message: string): void {\n    this.log(LogLevelEnum.ERROR, message);\n  }\n\n  /**\n   * Delegates the logging of messages to the appropriate transports.\n   * @param {string} level - The level at which to log the message.\n   * @param {string} message - The message to log.\n   */\n  log(level: string, message: string): void {\n    for (let i = 0; i < this.transports.length; i++) {\n      const logMessageBuilder = new LogMessageBuilder(this.config, this.transports[i]);\n      const formattedMessage = logMessageBuilder.formatMessage(level, message);\n      if (this.shouldLog(level, this.transports[i].level)) {\n        if (this.transports[i].log && isFunction(this.transports[i].log)) {\n          // Use custom log handler if available\n          this.transports[i].log(level, message);\n        } else {\n          // Otherwise, use the default log method\n          this.transports[i][level](formattedMessage);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { dynamic } from '../../types/Common';\n\nimport { Logger } from '../Logger';\nimport { ConsoleTransport } from '../transports/ConsoleTransport';\nimport { LogTransportManager } from './TransportManager';\nimport { LogLevelEnum } from '../enums/LogLevelEnum';\n\n/**\n * Interface defining the structure and methods for LogManager.\n */\nexport interface ILogManager {\n  transportManager?: LogTransportManager;\n  config?: Record<string, dynamic>;\n  name?: string;\n  requestId?: string;\n  level: string;\n  prefix?: string;\n  dateTimeFormat?: () => string;\n\n  transport?: Record<string, dynamic>;\n  transports?: Array<Record<string, dynamic>>;\n\n  addTransport?(transportObject: Record<string, dynamic>): void;\n  addTransports?(transportsList: Array<Record<string, dynamic>>): void;\n}\n\n/**\n * LogManager class provides logging functionality with support for multiple transports.\n * It is designed as a singleton to ensure a single instance throughout the application.\n */\nexport class LogManager extends Logger implements ILogManager {\n  private static instance: LogManager; // Singleton instance of LogManager\n  transportManager: LogTransportManager;\n  config: Record<string, any>;\n  name = 'VWO Logger'; // Default logger name\n  requestId = new Date().getTime().toString(); // current timestamp in milliseconds\n  level = LogLevelEnum.ERROR; // Default logging level\n  prefix = 'VWO-SDK'; // Default prefix for log messages\n  public dateTimeFormat(): string {\n    return new Date().toISOString(); // Default date-time format for log messages\n  }\n  transport: Record<string, any>;\n  transports: Array<Record<string, any>>;\n\n  /**\n   * Constructor for LogManager.\n   * @param {Record<string, any>} config - Configuration object for LogManager.\n   */\n  constructor(config?: Record<string, any>) {\n    super();\n\n    this.config = config;\n\n    if (config.isAlwaysNewInstance || !LogManager.instance) {\n      LogManager.instance = this;\n\n      // Initialize configuration with defaults or provided values\n      this.config.name = config.name || this.name;\n      this.config.requestId = config.requestId || this.requestId;\n      this.config.level = config.level || this.level;\n      this.config.prefix = config.prefix || this.prefix;\n      this.config.dateTimeFormat = config.dateTimeFormat || this.dateTimeFormat;\n\n      this.transportManager = new LogTransportManager(this.config);\n\n      this.handleTransports();\n    }\n\n    return LogManager.instance;\n  }\n\n  /**\n   * Provides access to the singleton instance of LogManager.\n   * @returns {LogManager} The singleton instance.\n   */\n  static get Instance(): LogManager {\n    return LogManager.instance;\n  }\n\n  /**\n   * Handles the initialization and setup of transports based on configuration.\n   */\n  handleTransports(): void {\n    this.addTransport(\n      new ConsoleTransport({\n        level: this.config.level,\n      }),\n    );\n  }\n\n  /**\n   * Adds a single transport to the LogManager.\n   * @param {Record<string, any>} transport - The transport object to add.\n   */\n  addTransport(transport: Record<string, any>): void {\n    this.transportManager.addTransport(transport);\n  }\n\n  /**\n   * Adds multiple transports to the LogManager.\n   * @param {Array<Record<string, any>>} transports - The list of transport objects to add.\n   */\n  addTransports(transports: Record<string, any>[]): void {\n    for (let i = 0; i < transports.length; i++) {\n      this.addTransport(transports[i]);\n    }\n  }\n\n  /**\n   * Logs a trace message.\n   * @param {string} message - The message to log at trace level.\n   */\n  trace(message: string): void {\n    this.transportManager.log(LogLevelEnum.TRACE, message);\n  }\n\n  /**\n   * Logs a debug message.\n   * @param {string} message - The message to log at debug level.\n   */\n  debug(message: string): void {\n    this.transportManager.log(LogLevelEnum.DEBUG, message);\n  }\n\n  /**\n   * Logs an informational message.\n   * @param {string} message - The message to log at info level.\n   */\n  info(message: string): void {\n    this.transportManager.log(LogLevelEnum.INFO, message);\n  }\n\n  /**\n   * Logs a warning message.\n   * @param {string} message - The message to log at warn level.\n   */\n  warn(message: string): void {\n    this.transportManager.log(LogLevelEnum.WARN, message);\n  }\n\n  /**\n   * Logs an error message.\n   * @param {string} message - The message to log at error level.\n   */\n  error(message: string): void {\n    this.transportManager.log(LogLevelEnum.ERROR, message);\n  }\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * logger.ts - Global Logger Singleton\n */\nimport { LogManager } from '../logger/core/LogManager';\n\nlet logger: LogManager | null = null;\n\n/**\n * Initializes the global logger instance.\n * This function should be called inside `VWOProvider` before logging is used anywhere in the application.\n *\n * @param {object} config - The logger configuration object.\n * @param {object} config.logger - Optional logging configuration (e.g., log level, transports).\n * @returns {void} No return value; initializes the logger instance.\n */\nexport function initLogger(config: any) {\n  if (!logger) {\n    logger = new LogManager(config?.logger || {});\n  }\n  return logger;\n}\n\n/**\n * Retrieves the global logger instance.\n * Ensures that `initLogger` has been called before attempting to use logging.\n *\n * @returns {LogManager} The global logger instance.\n */\nexport function getLogger(): LogManager {\n  if (!logger) {\n    logger = new LogManager({ level: 'error' });\n  }\n  return logger;\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum LogMessageEnum {\n  // common messages\n  VWO_CLIENT_MISSING = 'VWO Client is missing in {hookName} hook. Ensure VWOProvider is correctly initialized.',\n  INVALID_CONTEXT = 'Invalid user context in {hookName} hook. Ensure a valid userContext is provided.',\n  HOOK_ERROR = 'Error in {hookName} hook: {error}',\n  INVALID_HOOK_USAGE = '{hookName} must be used within a VWOProvider !!',\n\n  // VWO Provider Messages\n  VWO_PROVIDER_CLIENT_CONFIG_WARNING = 'VWOProvider Warning: Both `client` and `config` are provided. The `client` prop will take precedence, and the `config` props will be disregarded.',\n  VWO_PROVIDER_CONFIG_REQUIRED = 'VWOProvider Error: Either `client` or `config` must be provided.',\n  VWO_SDK_INITIALIZATION_FAILED = 'VWO-SDK Initialization failed: {error}',\n\n  // useTrackEvent Messages\n  VWO_TRACK_EVENT_NAME_REQUIRED = 'Event name is required for useTrackEvent hook and it should be a string',\n  VWO_TRACK_EVENT_ERROR = 'Error tracking event - {eventName}: {error}',\n\n  // useSetAttribute Messages\n  VWO_SET_ATTRIBUTE_MAP_REQUIRED = 'attributeMap (object having key-value pairs of user attributes) is required for useSetAttribute hook',\n  VWO_SET_ATTRIBUTE_ERROR = 'Error setting attributes: {error}',\n  VWO_SET_ATTRIBUTE_SUCCESS = 'User attributes set: {attributes}',\n\n  // useGetFlag Messages\n  VWO_NOT_READY_IN_USE_GET_FLAG = 'VWO is not ready in useGetFlag hook',\n  VWO_GET_FLAG_FEATURE_KEY_REQUIRED = 'Feature key is required for useGetFlag hook',\n  VWO_GET_FLAG_ERROR = 'Error fetching feature flag - {featureKey}: {error}',\n\n  // useGetFlagVariable Messages\n  VWO_GET_FLAG_VARIABLES_FLAG_REQUIRED = 'Flag is required for useGetFlagVariables hook and should be an object',\n  VWO_GET_FLAG_VARIABLES_ERROR = 'Error getting flag variables: {error}',\n  VWO_GET_FLAG_VARIABLE_REQUIRED = 'Flag and variable key are required for useGetFlagVariable hook',\n  VWO_GET_FLAG_VARIABLE_ERROR = 'Error getting flag variable: {error}',\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isFunction } from './DataTypeUtil';\n\nconst nargs = /\\{([0-9a-zA-Z_]+)\\}/g;\n\n/**\n * Constructs a message by replacing placeholders in a template with corresponding values from a data object.\n *\n * @param {string} template - The message template containing placeholders in the format `{key}`.\n * @param {Record<string, any>} data - An object containing keys and values used to replace the placeholders in the template.\n * @returns {string} The constructed message with all placeholders replaced by their corresponding values from the data object.\n */\nexport function buildMessage(template: string, data: Record<string, any> = {}): string {\n  try {\n    return template.replace(nargs, (match, key, index) => {\n      // Check for escaped placeholders\n      if (template[index - 1] === '{' && template[index + match.length] === '}') {\n        return key;\n      }\n\n      // Retrieve the value from the data object\n      const value = data[key];\n\n      // If the key does not exist or the value is null/undefined, return an empty string\n      if (value === undefined || value === null) {\n        return '';\n      }\n\n      // If the value is a function, evaluate it\n      return isFunction(value) ? value() : value;\n    });\n  } catch (err) {\n    return template; // Return the original template in case of an error\n  }\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum HookEnum {\n  VWO_CLIENT = 'useVWOClient',\n  VWO_CONTEXT = 'useVWOContext',\n  VWO_GET_FLAG = 'useGetFlag',\n  VWO_GET_FLAG_VARIABLE = 'useGetFlagVariable',\n  VWO_GET_FLAG_VARIABLES = 'useGetFlagVariables',\n  VWO_TRACK_EVENT = 'useTrackEvent',\n  VWO_SET_ATTRIBUTE = 'useSetAttribute',\n}\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { createContext, useContext } from 'react';\nimport { getLogger } from './services/LoggerService';\nimport { IVWOClient, IVWOContextModel } from 'vwo-fme-node-sdk';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { buildMessage } from './utils/LogMessageUtil';\nimport { HookEnum } from './enum/HookEnum';\ninterface VWOContextType {\n  vwoClient: IVWOClient | null;\n  userContext?: IVWOContextModel | null;\n  setUserContext?: (context: IVWOContextModel) => void;\n  isReady?: boolean;\n}\n\nexport const VWOContext = createContext<VWOContextType>({\n  vwoClient: null,\n  userContext: null,\n  setUserContext: undefined,\n  isReady: false,\n});\n\nexport const useVWOContext = (): VWOContextType | null => {\n  const logger = getLogger();\n  try {\n    // Fetch the context\n    const context = useContext(VWOContext);\n\n    // If the context is not found, throw an error\n    if (!context) {\n      logger.error(buildMessage(LogMessageEnum.INVALID_HOOK_USAGE, { hookName: HookEnum.VWO_CONTEXT }));\n      return null;\n    }\n    return context;\n  } catch (error) {\n    logger.error(buildMessage(LogMessageEnum.HOOK_ERROR, { error, hookName: HookEnum.VWO_CONTEXT }));\n    return null;\n  }\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport React, { useEffect, useState, ReactNode, useMemo } from 'react';\nimport { init, IVWOContextModel, IVWOClient, IVWOOptions } from 'vwo-fme-node-sdk';\nimport { VWOContext } from './VWOContext';\nimport { initLogger } from './services/LoggerService';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { buildMessage } from './utils/LogMessageUtil';\n\nexport interface VWOProviderWithClient {\n  client: IVWOClient;\n  userContext?: IVWOContextModel;\n  children: ReactNode;\n  fallbackComponent?: ReactNode;\n}\n\nexport interface VWOProviderWithConfig {\n  config: IVWOOptions;\n  userContext?: IVWOContextModel;\n  children: ReactNode;\n  fallbackComponent?: ReactNode;\n}\n\nexport type IVWOProvider = VWOProviderWithClient | VWOProviderWithConfig;\n\n/**\n * VWOProvider component to provide VWO client and configuration context to child components.\n * \n * @param props - The props for the VWOProvider component.\n * @returns A React element that provides the VWO client and configuration context to child components.\n */\nexport function VWOProvider(props: IVWOProvider): React.ReactElement {\n  const { userContext, children, fallbackComponent } = props;\n  const client = 'client' in props ? props.client : null;\n  const config = 'config' in props ? props.config : null;\n  \n  const [vwoClient, setVwoClient] = useState<IVWOClient | null>(client || null);\n  const [context, setContext] = useState<IVWOContextModel | null>(userContext || null);\n  const [isReady, setIsReady] = useState<boolean>(false);\n\n  const logger = initLogger(client?.options || config);\n  const memoizedConfig = useMemo(() => config || client?.options, []);\n\n  // Initialize the VWO SDK instance only once when the component mounts or if config is updated\n  useEffect(() => {\n    if(config && vwoClient) {\n      logger.warn(LogMessageEnum.VWO_PROVIDER_CLIENT_CONFIG_WARNING);\n    }\n    if (vwoClient) {\n      setIsReady(true);\n      return;\n    } else if (!config) {\n      logger.error(LogMessageEnum.VWO_PROVIDER_CONFIG_REQUIRED);\n      return;\n    }\n\n    const initializeVWO = async () => {\n      try {\n        if (!vwoClient && config) {\n          // Initialize the VWO SDK instance if vwoClient is not already initialized\n          const instance = await init(config);\n          setVwoClient(instance);\n          setIsReady(true);\n        }\n      } catch (error) {\n        logger.error(buildMessage(LogMessageEnum.VWO_SDK_INITIALIZATION_FAILED, { error }));\n      }\n    };\n\n    // Only initialize once\n    if (!vwoClient && config) {\n      initializeVWO();\n    }\n  }, [memoizedConfig]); // Re-run only when config changes\n\n  return (\n    <VWOContext.Provider value={{ vwoClient, userContext: context, setUserContext: setContext, isReady }}>\n      {fallbackComponent && !isReady ? fallbackComponent : children}\n    </VWOContext.Provider>\n  );\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { IVWOClient } from 'vwo-fme-node-sdk';\nimport { getLogger } from './services/LoggerService';\nimport { useVWOContext } from './VWOContext';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { buildMessage } from './utils/LogMessageUtil';\nimport { HookEnum } from './enum/HookEnum';\nconst defaultVwoClientResult: VWOClientResult = {\n  vwoClient: null,\n  isReady: false,\n};\n\nexport interface VWOClientResult {\n  vwoClient: IVWOClient | null;\n  isReady: boolean;\n}\n\n/**\n * Returns the VWO SDK client instance\n * @returns VWO SDK client instance\n */\nexport const useVWOClient = (): VWOClientResult => {\n  const logger = getLogger();\n\n  try {\n    const context = useVWOContext();\n\n    if (!context) {\n      logger.error(buildMessage(LogMessageEnum.INVALID_HOOK_USAGE, { hookName: HookEnum.VWO_CLIENT }));\n      return defaultVwoClientResult;\n    }\n\n    if (!context.isReady) {\n      return defaultVwoClientResult;\n    }\n\n    return {\n      vwoClient: context.vwoClient,\n      isReady: true,\n    };\n  } catch (error) {\n    logger.error(buildMessage(LogMessageEnum.HOOK_ERROR, { error, hookName: HookEnum.VWO_CLIENT }));\n    return defaultVwoClientResult;\n  }\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useState, useEffect, useCallback, useMemo } from 'react';\nimport { useVWOContext } from './VWOContext';\nimport { getLogger } from './services/LoggerService';\nimport { isObject } from './utils/DataTypeUtil';\nimport { Flag, IVWOContextModel } from 'vwo-fme-node-sdk';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { buildMessage } from './utils/LogMessageUtil';\nimport { HookEnum } from './enum/HookEnum';\nexport interface IFlag {\n  flag: Flag;\n  isReady: boolean;\n}\n\nconst createDefaultFlag = () =>\n  ({\n    isEnabled: () => false,\n    getVariables: (): unknown[] => [],\n    getVariable: <T = unknown>(key: string, defaultValue?: T) => defaultValue,\n  }) as unknown as Flag;\n\n/**\n * Custom hook to retrieve a feature flag using VWO client.\n *\n * @param {string} featureKey - The key of the feature flag to retrieve.\n * @param {Object} [context] - Optional user context to use for fetching the flag.\n * @returns {FlagResult} An object containing the flag and a readiness status.\n */\nexport const useGetFlag = (featureKey: string, context?: IVWOContextModel): IFlag => {\n  const defaultFlagResult: IFlag = {\n    flag: createDefaultFlag(),\n    isReady: false,\n  };\n  const { vwoClient, userContext, setUserContext, isReady } = useVWOContext();\n  const [flag, setFlag] = useState<Flag>(defaultFlagResult.flag);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const logger = getLogger();\n\n  const stableUserContext = useMemo(() => {\n    return (context || userContext || {}) as IVWOContextModel;\n  }, [JSON.stringify(context || userContext || {})]);\n\n  const getFlag = useCallback(async () => {\n    try {\n      if (!isReady) {\n        logger.error(LogMessageEnum.VWO_NOT_READY_IN_USE_GET_FLAG);\n        return;\n      }\n\n      const result = await vwoClient.getFlag(featureKey, stableUserContext);\n      setFlag(result);\n\n      setUserContext(stableUserContext);\n    } catch (error) {\n      logger.error(\n        buildMessage(LogMessageEnum.VWO_GET_FLAG_ERROR, {\n          featureKey,\n          error,\n        }),\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  }, [featureKey, stableUserContext, isReady]);\n\n  useEffect(() => {\n    if (!featureKey) {\n      logger.error(LogMessageEnum.VWO_GET_FLAG_FEATURE_KEY_REQUIRED);\n      return;\n    }\n\n    if (!isObject(stableUserContext) || !stableUserContext.id) {\n      logger.error(buildMessage(LogMessageEnum.INVALID_CONTEXT, { hookName: HookEnum.VWO_GET_FLAG }));\n      return;\n    }\n    // Check if all required dependencies are available\n    // stableUserContext && stableUserContext.id - check is added to handle the case where VWOProvider is not initialized\n    if (isReady && vwoClient && stableUserContext) {\n      getFlag();\n    }\n  }, [featureKey, JSON.stringify(stableUserContext), isReady]);\n\n  return {\n    flag,\n    isReady: !isLoading && !!flag,\n  };\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { isObject } from './utils/DataTypeUtil';\nimport { getLogger } from './services/LoggerService';\nimport { Flag } from 'vwo-fme-node-sdk';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { buildMessage } from './utils/LogMessageUtil';\n\n/**\n * Hook to get all variables from a flag\n * @param flag - The flag to get the variables from\n * @returns The variables from the flag\n */\nexport const useGetFlagVariables = (flag: Flag): Array<Record<string, unknown>> => {\n  const logger = getLogger();\n  try {\n    if (!flag || !isObject(flag)) {\n      logger.error(LogMessageEnum.VWO_GET_FLAG_VARIABLES_FLAG_REQUIRED);\n      return [];\n    }\n\n    return flag.getVariables();\n  } catch (error) {\n    logger.error(buildMessage(LogMessageEnum.VWO_GET_FLAG_VARIABLES_ERROR, { error }));\n    return [];\n  }\n};\n\n/**\n * Hook to get a flag variable\n * @param flag - The flag to get the variable from\n * @param variableKey - The key of the variable to get\n * @param defaultValue - The default value to return if the variable is not found\n * @returns The value of the variable\n */\nexport const useGetFlagVariable = <T>(flag: Flag, variableKey: string, defaultValue: T): T => {\n  const logger = getLogger();\n  try {\n    if (!flag || !isObject(flag)) {\n      return defaultValue;\n    }\n\n    if (!variableKey) {\n      logger.error(LogMessageEnum.VWO_GET_FLAG_VARIABLE_REQUIRED);\n      return defaultValue;\n    }\n\n    return flag.getVariable(variableKey, defaultValue);\n  } catch (error) {\n    logger.error(buildMessage(LogMessageEnum.VWO_GET_FLAG_VARIABLE_ERROR, { error }));\n    return defaultValue;\n  }\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { getLogger } from './services/LoggerService';\nimport { useVWOContext } from './VWOContext';\nimport { isObject, isString } from './utils/DataTypeUtil';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { buildMessage } from './utils/LogMessageUtil';\nimport { HookEnum } from './enum/HookEnum';\n/**\n * Interface for the return type of useTrackEvent hook\n */\nexport interface ITrackEvent {\n  trackEvent: (\n    eventName: string,\n    eventProperties?: Record<string, string | number | boolean>,\n  ) => Promise<Record<string, boolean>>;\n  isReady: boolean;\n}\n\n/**\n * Hook to provide the trackEvent function for tracking events.\n * @returns {ITrackEvent} Object containing trackEvent function and isReady boolean\n */\nexport const useTrackEvent = (): ITrackEvent => {\n  const logger = getLogger();\n\n  // Fetch the vwoClient and userContext from the context\n  const { vwoClient, userContext, isReady } = useVWOContext();\n\n  /**\n   * trackEvent function to be returned by the hook\n   * @param eventName - The name of the event to track\n   * @param eventProperties - The properties of the event (optional)\n   */\n  const trackEvent = async (\n    eventName: string,\n    eventProperties: Record<string, string | number | boolean> = {},\n  ): Promise<Record<string, boolean>> => {\n    if (!isReady) {\n      logger.error(buildMessage(LogMessageEnum.VWO_CLIENT_MISSING, { hookName: HookEnum.VWO_TRACK_EVENT }));\n      return Promise.resolve({});\n    }\n    if (!eventName || !isString(eventName)) {\n      logger.error(LogMessageEnum.VWO_TRACK_EVENT_NAME_REQUIRED);\n      return Promise.resolve({});\n    }\n\n    // Ensure userContext is valid\n    if (!userContext || !isObject(userContext) || !userContext.id) {\n      logger.error(buildMessage(LogMessageEnum.INVALID_CONTEXT, { hookName: HookEnum.VWO_TRACK_EVENT }));\n      return Promise.resolve({});\n    }\n\n    try {\n      return await vwoClient.trackEvent(eventName, userContext, eventProperties);\n    } catch (error) {\n      logger.error(\n        buildMessage(LogMessageEnum.VWO_TRACK_EVENT_ERROR, {\n          eventName,\n          error: error instanceof Error ? error.message : error,\n        }),\n      );\n      return Promise.resolve({});\n    }\n  };\n\n  return { trackEvent, isReady };\n};\n","/**\n * Copyright 2025 Wingify Software Pvt. Ltd.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *    http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { useVWOContext } from './VWOContext';\nimport { isObject } from './utils/DataTypeUtil';\nimport { getLogger } from './services/LoggerService';\nimport { LogMessageEnum } from './enum/LogMessageEnum';\nimport { buildMessage } from './utils/LogMessageUtil';\nimport { HookEnum } from './enum/HookEnum';\n\n/**\n * Interface for the return type of useSetAttribute hook\n */\nexport interface ISetAttribute {\n  setAttribute: (attributeMap: Record<string, string | number | boolean>) => void;\n  isReady: boolean;\n}\n\n/**\n * Hook to return a function for setting user attributes.\n * @returns {ISetAttribute} Object containing setAttribute function and isReady boolean\n */\nexport const useSetAttribute = (): ISetAttribute => {\n  const logger = getLogger();\n\n  // Fetch the vwoClient and userContext from the context\n  const { vwoClient, userContext, isReady } = useVWOContext();\n\n  /**\n   * Function to set user attributes dynamically\n   * @param attributeMap - The map of attributes to set\n   */\n  const setAttribute = (attributeMap: Record<string, string | number | boolean>): void => {\n    // Return a no-op function if vwoClient or userContext is not available\n    if (!isReady) {\n      logger.error(buildMessage(LogMessageEnum.VWO_CLIENT_MISSING, { hookName: HookEnum.VWO_SET_ATTRIBUTE }));\n      return;\n    }\n    if (!userContext || !isObject(userContext) || !userContext.id) {\n      logger.error(buildMessage(LogMessageEnum.INVALID_CONTEXT, { hookName: HookEnum.VWO_SET_ATTRIBUTE }));\n      return;\n    }\n    if (!attributeMap || !isObject(attributeMap) || Object.keys(attributeMap).length === 0) {\n      logger.error(LogMessageEnum.VWO_SET_ATTRIBUTE_MAP_REQUIRED);\n      return;\n    }\n\n    try {\n      vwoClient.setAttribute(attributeMap, userContext); // Set the attributes\n      logger.info(\n        buildMessage(LogMessageEnum.VWO_SET_ATTRIBUTE_SUCCESS, {\n          attributes: JSON.stringify(attributeMap),\n        }),\n      );\n    } catch (error) {\n      logger.error(buildMessage(LogMessageEnum.VWO_SET_ATTRIBUTE_ERROR, { error }));\n    }\n  };\n\n  return { setAttribute, isReady };\n};\n"],"names":["Logger","LogLevelEnum","ConsoleTransport","constructor","config","level","trace","message","consoleLog","TRACE","debug","DEBUG","info","INFO","warn","WARN","error","ERROR","console","LogMessageBuilder","loggerConfig","transportConfig","prefix","dateTimeFormat","formatMessage","getFormattedLevel","getFormattedPrefix","getFormattedDateTime","upperCaseLevel","toUpperCase","LogLevelColorInfoEnum","isFunction","val","Object","prototype","toString","call","isObject","isString","LogLevelNumberEnum","LogTransportManager","transports","addTransport","transport","push","shouldLog","transportLevel","configLevel","targetLevel","desiredLevel","log","i","length","logMessageBuilder","formattedMessage","LogManager","Date","getTime","isAlwaysNewInstance","instance","name","requestId","transportManager","handleTransports","toISOString","Instance","addTransports","logger","initLogger","getLogger","LogMessageEnum","nargs","buildMessage","template","data","replace","match","key","index","value","undefined","err","HookEnum","VWOContext","createContext","vwoClient","userContext","setUserContext","isReady","useVWOContext","context","useContext","INVALID_HOOK_USAGE","hookName","VWO_CONTEXT","HOOK_ERROR","VWOProvider","props","children","fallbackComponent","client","setVwoClient","useState","setContext","setIsReady","options","memoizedConfig","useMemo","useEffect","VWO_PROVIDER_CLIENT_CONFIG_WARNING","VWO_PROVIDER_CONFIG_REQUIRED","initializeVWO","init","VWO_SDK_INITIALIZATION_FAILED","React","Provider","defaultVwoClientResult","useVWOClient","VWO_CLIENT","createDefaultFlag","isEnabled","getVariables","getVariable","defaultValue","useGetFlag","featureKey","defaultFlagResult","flag","setFlag","isLoading","setIsLoading","stableUserContext","JSON","stringify","getFlag","useCallback","VWO_NOT_READY_IN_USE_GET_FLAG","result","VWO_GET_FLAG_ERROR","VWO_GET_FLAG_FEATURE_KEY_REQUIRED","id","INVALID_CONTEXT","VWO_GET_FLAG","useGetFlagVariables","VWO_GET_FLAG_VARIABLES_FLAG_REQUIRED","VWO_GET_FLAG_VARIABLES_ERROR","useGetFlagVariable","variableKey","VWO_GET_FLAG_VARIABLE_REQUIRED","VWO_GET_FLAG_VARIABLE_ERROR","useTrackEvent","trackEvent","eventName","eventProperties","VWO_CLIENT_MISSING","VWO_TRACK_EVENT","Promise","resolve","VWO_TRACK_EVENT_NAME_REQUIRED","VWO_TRACK_EVENT_ERROR","Error","useSetAttribute","setAttribute","attributeMap","VWO_SET_ATTRIBUTE","keys","VWO_SET_ATTRIBUTE_MAP_REQUIRED","VWO_SET_ATTRIBUTE_SUCCESS","attributes","VWO_SET_ATTRIBUTE_ERROR"],"mappings":"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"}